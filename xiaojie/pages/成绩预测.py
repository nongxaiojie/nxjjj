import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# ËÆæÁΩÆ‰∏≠ÊñáÂ≠ó‰Ωì
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimHei', 'DejaVu Sans']
plt.rcParams['axes.unicode_minus'] = False

# È°µÈù¢ÈÖçÁΩÆ
st.set_page_config(page_title="ÊúüÊú´ÊàêÁª©È¢ÑÊµã", page_icon="üîÆ", layout="wide")
st.title("üîÆ ÊúüÊú´ÊàêÁª©È¢ÑÊµã")

# ËæìÂÖ•ÊèêÁ§∫ÊñáÂ≠ó
st.markdown("***:green[ËØ∑ËæìÂÖ•Â≠¶ÁîüÁöÑÂ≠¶‰π†‰ø°ÊÅØÔºåÁ≥ªÁªüÂ∞ÜÊ†πÊçÆÊ®°ÂûãÈ¢ÑÊµãÊúüÊú´ÊàêÁª©Âπ∂Êèê‰æõÂ≠¶‰π†Âª∫ËÆÆ]***")

# ËæìÂÖ•Ë°®Âçï
with st.form("student_form", clear_on_submit=False):
    # Â≠¶Âè∑ËæìÂÖ•
    student_id = st.text_input("Â≠¶Âè∑")
    
    # ‰∏§ÂàóÂ∏ÉÂ±Ä
    col1, col2 = st.columns(2)
    with col1:
        gender = st.selectbox("ÊÄßÂà´", ["Áî∑", "Â•≥"])
        major = st.selectbox("‰∏ì‰∏ö", ["Â§ßÊï∞ÊçÆÁÆ°ÁêÜ", "‰∫∫Â∑•Êô∫ËÉΩ", "ÁîµÂ≠êÂïÜÂä°", "Ë¥¢Âä°ÁÆ°ÁêÜ", "Â∑•ÂïÜÁÆ°ÁêÜ"])  # Ë°•ÂÖÖ‰∏ì‰∏öÈÄâÈ°π
    with col2:
        study_hours = st.slider("ÊØèÂë®Â≠¶‰π†Êó∂ÈïøÔºàÂ∞èÊó∂Ôºâ", 0, 100, 20)
        attendance = st.slider("‰∏äËØæÂá∫Âã§Áéá", 0.0, 1.0, 0.8, 0.01)
        midterm_score = st.slider("Êúü‰∏≠ËÄÉËØïÂàÜÊï∞", 0.0, 100.0, 70.0, 1.0)
        homework_rate = st.slider("‰Ωú‰∏öÂÆåÊàêÁéá", 0.0, 1.0, 0.8, 0.01)
    
    # È¢ÑÊµãÊåâÈíÆ
    submit_button = st.form_submit_button("È¢ÑÊµãÊúüÊú´ÊàêÁª©", use_container_width=True)

# ËØªÂèñÁúüÂÆûCSVÊï∞ÊçÆ
def load_real_data():
    df = pd.read_csv("student_data_adjusted_rounded.csv", encoding='utf-8')
    # ÂØπÁ±ªÂà´ÂûãÁâπÂæÅËøõË°åÁã¨ÁÉ≠ÁºñÁ†Å
    df = pd.get_dummies(df, columns=["ÊÄßÂà´", "‰∏ì‰∏ö"])
    return df

# ËÆ≠ÁªÉÊ®°Âûã
def train_model(df):
    # ÁâπÂæÅÂíåÁõÆÊ†áÂèòÈáè
    X = df.drop(columns=["Â≠¶Âè∑", "ÊúüÊú´ËÄÉËØïÂàÜÊï∞"])
    y = df["ÊúüÊú´ËÄÉËØïÂàÜÊï∞"]
    model = LinearRegression()
    model.fit(X, y)
    # ËØÑ‰º∞Ê®°ÂûãÔºàÂèØÈÄâÔºâ
    y_pred = model.predict(X)
    mse = mean_squared_error(y, y_pred)
    r2 = r2_score(y, y_pred)
    
    return model

# Âä†ËΩΩÊï∞ÊçÆÂπ∂ËÆ≠ÁªÉÊ®°Âûã
real_df = load_real_data()
model = train_model(real_df)

# È¢ÑÊµãÈÄªËæë
if submit_button:
    # ÊûÑÈÄ†ËæìÂÖ•Êï∞ÊçÆÔºàÂåÖÂê´Áã¨ÁÉ≠ÁºñÁ†ÅÁöÑÊÄßÂà´Âíå‰∏ì‰∏öÔºâ
    input_dict = {
        "ÊØèÂë®Â≠¶‰π†Êó∂ÈïøÔºàÂ∞èÊó∂Ôºâ": study_hours,
        "‰∏äËØæÂá∫Âã§Áéá": attendance,
        "Êúü‰∏≠ËÄÉËØïÂàÜÊï∞": midterm_score,
        "‰Ωú‰∏öÂÆåÊàêÁéá": homework_rate,
        "ÊÄßÂà´_Áî∑": 1 if gender == "Áî∑" else 0,
        "ÊÄßÂà´_Â•≥": 1 if gender == "Â•≥" else 0,
    }
    # Ë°•ÂÖÖ‰∏ì‰∏öÁöÑÁã¨ÁÉ≠ÁºñÁ†Å
    for m in ["Â§ßÊï∞ÊçÆÁÆ°ÁêÜ", "‰∫∫Â∑•Êô∫ËÉΩ", "ÁîµÂ≠êÂïÜÂä°", "Ë¥¢Âä°ÁÆ°ÁêÜ", "Â∑•ÂïÜÁÆ°ÁêÜ"]:
        input_dict[f"‰∏ì‰∏ö_{m}"] = 1 if major == m else 0
    # ËΩ¨Êç¢‰∏∫DataFrameÂπ∂Á°Æ‰øùÂàóÈ°∫Â∫è‰∏éËÆ≠ÁªÉÊï∞ÊçÆ‰∏ÄËá¥
    input_df = pd.DataFrame([input_dict], columns=real_df.drop(columns=["Â≠¶Âè∑", "ÊúüÊú´ËÄÉËØïÂàÜÊï∞"]).columns)
    predicted_score = model.predict(input_df)[0]
    predicted_score = max(0, min(100, predicted_score))  # Á°Æ‰øùÂàÜÊï∞Âú®ÂêàÁêÜËåÉÂõ¥
    
    st.subheader("üìä È¢ÑÊµãÁªìÊûú")
    st.write(f"È¢ÑÊµãÊúüÊú´ÂàÜÊï∞Ôºö{predicted_score:.2f}ÂàÜ")
    
    # Â±ïÁ§∫ÂõæÁâá
    if predicted_score >= 60:
        st.image(
            "https://www.wishesquotesimages.com/wp-content/uploads/2018/09/congratulations-image-free.jpg",
            caption="Congratulations!",
            use_container_width=True
        )
    else:
        st.image(
            "https://img.lovepik.com/free-png/20220109/lovepik-come-on-png-image_401352383_wh860.png",
            caption="ÁªßÁª≠Âä†Ê≤πÔºÅ",
            use_container_width=True
        )
